<?php/** * 관리자 > 공지사항 모듈 클래스 * @file    NoticeAdmin.class.php * @author  Alpha-Edu * @package board */namespace sFramework;class NoticePartner extends Notice{    protected function setBoardConfig()    {        parent::setBoardConfig();        $bd_code = $this->get('bd_code');        // 연수·워크숍 신청·접수 게시판 정렬 reg_time DESC 적용 yllee 190509        if ($bd_code == 'request') {            $this->set('flag_use_reg', false);        }    }    public function checkViewAuth($data)    {        return true;    }    public function checkWriteAuth()    {        return true;    }    public function checkUpdateAuth($uid)    {        return true;    }    /**     * 리스트 권한 검사 wkkim 180424     * @return bool     */    public function checkListAuth()    {        global $member;        $mb_auth_code_arr = explode('|', $member['mb_auth_codes']);        // 최고관리자 모든 권한 부여        if ($member['mb_level'] == 10) {            return true;        }        // 지정된 권한이 아닐 경우 리스트 조회를 막음        $bd_code = $_GET['bd_code'];        if ($bd_code == 'receipt') {            if (!in_array($bd_code, $mb_auth_code_arr)) {                return false;            }        }        return true;    }    public function initInsert()    {        global $oBoard;        parent::initInsert();        $bd_code = $oBoard->get('bd_code');        if ($bd_code == 'article') {            $this->set('return_uri', './write.html');        }    }    protected function initUpdate()    {        global $oBoard;        parent::initUpdate();        $bd_code = $oBoard->get('bd_code');        if ($bd_code == 'article') {            $this->set('return_uri', './write.html');        }    }    public function recruitList()    {        $db_where = "WHERE bd_code = 'recruit'";        $list = Db::select('tbl_board', '*', $db_where, "", "");        return $list;    }    protected function makeDbWhere()    {        global $member;        $bd_writer_id = $member['mb_id'];        $mb_name = $member['mb_name'];        $db_where = parent::makeDbWhere();        //$db_where .= " AND ((bd_writer_mode='admin' AND bd_etc3 = 'Y' AND (bd_etc2 LIKE ('%$bd_writer_id%') OR bd_etc1 LIKE ('%$mb_name%'))) OR (bd_writer_mode='admin' AND bd_etc3='A') OR reg_id='$bd_writer_id')";        $db_where .= " AND bd_is_display='Y'";        $this->set('db_where', $db_where);        return $db_where;    }    public function getCourseNameArr()    {        global $member;        $mb_id = $member['mb_id'];        $data = Db::select('tbl_batch','DISTINCT(bt_course_name)',"WHERE bt_tutor1 = '$mb_id' OR bt_tutor2 = '$mb_id' OR bt_tutor3 = '$mb_id'",'ORDER BY bt_course_name','');        $arr = array();        for($i = 0; $i<count($data); $i++){            $arr[$data[$i]['bt_course_name']] =$data[$i]['bt_course_name'];        }        return $arr;    }    public function selectAroundData($uid, $mode)    {        global $member;        $bd_writer_name = $member['mb_name'];        $data_table = $this->get('data_table');        $pk = $this->get('pk');        $this->initSelect();        $select_table = $this->get('select_table');        $select_columns = $this->get('select_columns');        // where        $db_where = $this->makeDbWhere();        $db_where .= " AND (bd_writer_mode='admin' or bd_writer_name='$bd_writer_name')";        // having        $db_having = $this->makeDbHaving();        // order        $db_order = $this->makeDbOrder();        // around        $order_column = $this->get('order_column');        $data = Db::selectOnce($data_table, "$order_column as order_value", "WHERE $pk = '$uid'", "");        $order_value = $data['order_value'];        $db_where .= " AND $pk != '$uid' AND $order_column ";        if ($mode == 'prev') {            $db_where .= ' > ';            $db_order = str_replace('DESC', 'ASC', $db_order);        } elseif ($mode == 'next') {            $db_where .= ' < ';        }        $db_where .= " '$order_value' ";        $data = Db::selectOnce($select_table, $select_columns, $db_where, $db_having . ' ' . $db_order);        return $data;    }}