<?php/** * 게시판 모듈 클래스 * @file    Board.class.php * @author  Alpha-Edu * @package board */namespace sFramework;use PHPMailer\PHPMailer\Exception;use PHPMailer\PHPMailer\PHPMailer;class Board extends StandardModule{    // DB info    public static $data_table = 'tbl_board';    public static $pk = 'bd_id';    /** 일반게시판     * 카테고리 O : 경영공시, 교육·세미나, 자주하는질문     * 카테고리 X : 공지사항, 관계법령, 정부3.0 정보공개, 통계·정책, 뉴스     * 공고게시판     * 카테고리 O : 사업공고,     * 카테고리 X : 입찰공고, 채용공고     * 답변/비밀글O : 클린신고게시판, 건의사항     * 캘린더     * 주요행사     * 목록형 게시판     * IT/CT기업현황     * 예약 게시판     * 벤처빌딩 공공시설예약     * 신청 게시판     * 벤처빌딩 입주신청*/    /**     * 모듈 환경설정     */    protected function setModuleConfig()    {        parent::setModuleConfig();        $this->set('module', 'board');        $this->set('module_name', '게시판');        // 환경설정        $this->setBoardConfig();        // 검색        $search_columns = 'bd_code';        if ($this->get('flag_use_category')) {            $search_columns .= ',bd_category';        }        if ($this->get('flag_use_state')) {            $search_columns .= ',bd_state';        }        if ($this->get('flag_use_display')) {            $search_columns .= ',bd_is_display';        }        $this->set('search_columns', $search_columns);        $search_like_arr = array(            'bd_subject' => '제목',            'bd_content' => '내용',            'bd_writer_name' => '작성자명'        );        $this->set('search_like_arr', $search_like_arr);        $search_date_arr = array(            'reg_time' => '등록일'        );        if ($this->get('flag_use_reg')) {            $search_date_arr = array(                'bd_reg_date' => '작성일'            );        }        if ($this->get('flag_use_bgn')) {            $search_date_arr['bd_bgn_date'] = '시작일';        }        if ($this->get('flag_use_end')) {            $search_date_arr['bd_end_date'] = '종료일';        }        $this->set('search_date_arr', $search_date_arr);        // 정렬        $order_column = $this->get('pk');        if ($_GET['sv'] == 'list_download') {            $order_column = 'dw_id';        } else {            if ($this->get('flag_use_reg')) {                $order_column = "CONCAT(bd_reg_date, ' ', bd_reg_time)";            } elseif ($this->get('flag_use_bgn')) {                $order_column = "CONCAT(bd_bgn_date, ' ', bd_bgn_time)";            }        }        $this->set('order_column', $order_column);        // 최신글        $this->set('new_days', 7);        // code        $this->set('bd_code_arr', null);        $this->set('bd_category_arr', null);        $this->set('bd_use_email_arr', array(            'Y' => 'Email 수신 동의'        ));        $this->set('bd_use_sms_arr', array(            'Y' => 'SMS 수신 동의'        ));        $this->set('bd_is_notice_arr', array(            'Y' => '공지글'        ));        $this->set('bd_is_secret_arr', array(            'Y' => '비밀글'        ));        $this->set('bd_is_display_arr', array(            'Y' => '출력',            'N' => '숨김'        ));        if ($this->get('flag_use_answer')) {            // 센터에바란다 게시판 답변 상태 yllee 180906            // Q&A 게시판 답변 상태 jepark 191125            $bd_code = $this->get('bd_code');            if ($bd_code == 'proposal' || $bd_code == 'qna') {                $bd_state_arr = array(                    'W' => '대기',                    'E' => '완료'                );            } else {                $bd_state_arr = array(                    'P' => '진행중',                    'E' => '접수완료',                    'W' => '대기',                    'C' => '취소'                );            }        } else {            $bd_state_arr = null;        }        $this->set('bd_state_arr', $bd_state_arr);        // code to text        $code_columns = 'bd_code';        if ($this->get('flag_use_email')) {            $code_columns .= ',bd_use_email';        }        if ($this->get('flag_use_sms')) {            $code_columns .= ',bd_use_sms';        }        if ($this->get('flag_use_state')) {            $code_columns .= ',bd_state';        }        if ($this->get('flag_use_notice')) {            $code_columns .= ',bd_is_notice';        }        if ($this->get('flag_use_secret')) {            $code_columns .= ',bd_is_secret';        }        if ($this->get('flag_use_display')) {            $code_columns .= ',bd_is_display';        }        $this->set('flag_process', array(            'Y' => '처리',            'N' => '미처리'        ));        $this->set('code_columns', $code_columns);    }    /**     * 게시판 환경 설정     */    protected function setBoardConfig()    {        // bd_code        $uri_arr = explode('/', $_SERVER['REDIRECT_URL']);        $this->set('bd_code', $uri_arr[2]);        // flag        $this->set('flag_use_category', false); // 카테고리        $this->set('flag_use_email', false);    // 이메일        $this->set('flag_use_tel', false);    // 연락처        $this->set('flag_use_sms', false);      // SMS        $this->set('flag_use_link', false);      // 링크URI        $this->set('flag_use_answer', false);   // 답변        $this->set('flag_use_bgn', false);      // 시작일        $this->set('flag_use_end', false);      // 종료일        $this->set('flag_use_reg', false);      // 작성일 (출력용)        $this->set('flag_use_state', false);    // 상태        $this->set('flag_use_notice', false);    // 공지        $this->set('flag_use_secret', false);   // 비밀글        $this->set('flag_use_display', false);    // 출력여부        $this->set('flag_use_etc1', false);    // 추가컬럼 사용여부        $this->set('flag_use_etc2', false);        $this->set('flag_use_etc3', false);        $this->set('flag_use_etc4', false);        $this->set('flag_use_etc5', false);        $this->set('flag_use_etc6', false);        $this->set('flag_use_etc7', false);        $this->set('flag_use_etc8', false);        $this->set('flag_use_etc9', false);        $this->set('flag_use_etc10', false);    }    protected function initInsert()    {        parent::initInsert();        $insert_columns = 'bd_subject,bd_content,bd_writer_name';        $required_arr = array(            'bd_code' => '게시판코드',            'bd_subject' => '제목',            'bd_content' => '내용'        );        if ($this->get('flag_use_category')) {            $insert_columns .= ',bd_category';            $required_arr['bd_category'] = '카테고리';        }        if ($this->get('flag_use_email')) {            $insert_columns .= ',bd_writer_email,bd_use_email';            $required_arr['bd_writer_email'] = '이메일';        }        if ($this->get('flag_use_tel')) {            $insert_columns .= ',bd_writer_tel,bd_use_tel';            $required_arr['bd_writer_tel'] = '연락처';        }        if ($this->get('flag_use_sms')) {            $insert_columns .= ',bd_use_sms';        }        if ($this->get('flag_use_link')) {            $insert_columns .= ',bd_link_uri';        }        if ($this->get('flag_use_bgn')) {            $insert_columns .= ',bd_bgn_date,bd_bgn_time';            $required_arr['bd_bgn_date'] = '시작일';            $required_arr['bd_bgn_time'] = '시작시간';        }        if ($this->get('flag_use_end')) {            $insert_columns .= ',bd_end_date,bd_end_time';            $required_arr['bd_end_date'] = '종료일';            $required_arr['bd_end_time'] = '종료시간';        }        if ($this->get('flag_use_reg')) {            $insert_columns .= ',bd_reg_date,bd_reg_time';            $required_arr['bd_reg_date'] = '작성일';            $required_arr['bd_reg_time'] = '작성시간';        }        if ($this->get('flag_use_state')) {            $insert_columns .= ',bd_state';            $required_arr['bd_state'] = '상태';        }        if ($this->get('flag_use_notice')) {            $insert_columns .= ',bd_is_notice';        }        if ($this->get('flag_use_secret')) {            $insert_columns .= ',bd_is_secret';        }        if ($this->get('flag_use_display')) {            $insert_columns .= ',bd_is_display';        }        for ($i = 1; $i <= 10; $i++) {            if ($this->get('flag_use_etc' . $i)) {                $insert_columns .= ',bd_etc' . $i;            }        }        $this->set('insert_columns', $insert_columns);        $this->set('required_arr', $required_arr);        $this->set('return_uri', './view.html');    }    protected function convertInsert($arr)    {        $arr = parent::convertInsert($arr);        // 모드        global $layout;        $arr['bd_writer_mode'] = $layout;        // 게시판코드        $arr['bd_code'] = $this->get('bd_code');        // 아이피        $arr['bd_writer_ip'] = _USER_IP_;        // 조회수        $arr['bd_hit'] = 0;        // 사용하지 않는 컬럼 초기화        if (!$this->get('flag_use_category')) {            unset($arr['bd_category']);        }        if (!$this->get('flag_use_email')) {            unset($arr['bd_writer_email']);            $arr['bd_use_email'] = 'N';        }        if (!$this->get('flag_use_tel')) {            unset($arr['bd_writer_tel']);        }        if (!$this->get('flag_use_sms')) {            $arr['bd_use_sms'] = 'N';        }        if (!$this->get('flag_use_link')) {            $arr['bd_link_uri'] = '';        }        if (!$this->get('flag_use_bgn')) {            unset($arr['bd_bgn_date']);            unset($arr['bd_bgn_time']);        }        if (!$this->get('flag_use_end')) {            unset($arr['bd_end_date']);            unset($arr['bd_end_time']);        }        if (!$this->get('flag_use_reg')) {            unset($arr['bd_reg_date']);            unset($arr['bd_reg_time']);        }        if (!$this->get('flag_use_state')) {            unset($arr['bd_state']);        }        if (!$this->get('flag_use_notice')) {            $arr['bd_is_notice'] = 'N';        }        if (!$this->get('flag_use_secret')) {            $arr['bd_is_secret'] = 'N';        }        if (!$this->get('flag_use_display')) {            $arr['bd_is_display'] = 'Y';        }        for ($i = 1; $i <= 10; $i++) {            if (!$this->get('flag_use_etc' . $i)) {                unset($arr['bd_etc' . $i]);            }        }        // 시작시간        if (!$arr['bd_bgn_time']) {            $arr['bd_bgn_time'] = '00:00:00';        }        // 종료시간        if (!$arr['bd_end_time']) {            $arr['bd_end_time'] = '00:00:00';        }        // 작성시간        if (!$arr['bd_reg_time']) {            $arr['bd_reg_time'] = substr(_NOW_DATETIME_, 11, 8);        }        return $arr;    }    protected function postInsert($arr)    {        $result = parent::postInsert($arr);        return $result;    }    protected function initUpdate()    {        parent::initUpdate();        $pk = $this->get('pk');        $update_columns = $pk . ',bd_subject,bd_content,bd_writer_name';        $required_arr = array(            $pk => '게시물아이디',            'bd_code' => '게시판코드',            'bd_subject' => '제목',            'bd_content' => '내용'        );        if ($this->get('flag_use_category')) {            $update_columns .= ',bd_category';            $required_arr['bd_category'] = '카테고리';        }        if ($this->get('flag_use_email')) {            $update_columns .= ',bd_writer_email,bd_use_email';            $required_arr['bd_writer_email'] = '이메일';        }        if ($this->get('flag_use_tel')) {            $update_columns .= ',bd_writer_tel';            $required_arr['bd_writer_tel'] = '연락처';        }        if ($this->get('flag_use_sms')) {            $update_columns .= ',bd_use_sms';        }        if ($this->get('flag_use_link')) {            $update_columns .= ',bd_link_uri';        }        if ($this->get('flag_use_bgn')) {            $update_columns .= ',bd_bgn_date,bd_bgn_time';            $required_arr['bd_bgn_date'] = '시작일';            $required_arr['bd_bgn_time'] = '시작시간';        }        if ($this->get('flag_use_end')) {            $update_columns .= ',bd_end_date,bd_end_time';            $required_arr['bd_end_date'] = '종료일';            $required_arr['bd_end_time'] = '종료시간';        }        if ($this->get('flag_use_reg')) {            $update_columns .= ',bd_reg_date,bd_reg_time';            $required_arr['bd_reg_date'] = '작성일';            $required_arr['bd_reg_time'] = '작성시간';        }        if ($this->get('flag_use_state')) {            $update_columns .= ',bd_state';            $required_arr['bd_state'] = '상태';        }        if ($this->get('flag_use_notice')) {            $update_columns .= ',bd_is_notice';        }        if ($this->get('flag_use_secret')) {            $update_columns .= ',bd_is_secret';        }        if ($this->get('flag_use_display')) {            $update_columns .= ',bd_is_display';        }        for ($i = 1; $i <= 10; $i++) {            if ($this->get('flag_use_etc' . $i)) {                $update_columns .= ',bd_etc' . $i;            }        }        $this->set('update_columns', $update_columns);        $this->set('required_arr', $required_arr);        $this->set('return_uri', './view.html');    }    protected function convertUpdate($arr)    {        $arr = parent::convertUpdate($arr);        // 게시판코드        $arr['bd_code'] = $this->get('bd_code');        // 사용하지 않는 컬럼 초기화        if (!$this->get('flag_use_category')) {            unset($arr['bd_category']);        }        if (!$this->get('flag_use_email')) {            unset($arr['bd_writer_email']);            $arr['bd_use_email'] = 'N';        }        if (!$this->get('flag_use_tel')) {            unset($arr['bd_writer_tel']);        }        if (!$this->get('flag_use_sms')) {            $arr['bd_use_sms'] = 'N';        }        if (!$this->get('flag_use_link')) {            $arr['bd_link_uri'] = '';        }        if (!$this->get('flag_use_bgn')) {            unset($arr['bd_bgn_date']);            unset($arr['bd_bgn_time']);        }        if (!$this->get('flag_use_end')) {            unset($arr['bd_end_date']);            unset($arr['bd_end_time']);        }        if (!$this->get('flag_use_reg')) {            unset($arr['bd_reg_date']);            unset($arr['bd_reg_time']);        }        if (!$this->get('flag_use_state')) {            unset($arr['bd_state']);        }        if (!$this->get('flag_use_notice')) {            $arr['bd_is_notice'] = 'N';        }        if (!$this->get('flag_use_secret')) {            $arr['bd_is_secret'] = 'N';        }        if (!$this->get('flag_use_display')) {            $arr['bd_is_display'] = 'Y';        }        for ($i = 1; $i <= 10; $i++) {            if (!$this->get('flag_use_etc' . $i)) {                unset($arr['bd_etc' . $i]);            }        }        // 시작시간        if (!$arr['bd_bgn_time']) {            $arr['bd_bgn_time'] = '00:00:00';        }        // 종료시간        if (!$arr['bd_end_time']) {            $arr['bd_end_time'] = '00:00:00';        }        // 작성시간        if (!$arr['bd_reg_time']) {            $arr['bd_reg_time'] = substr(_NOW_DATETIME_, 11, 8);        }        return $arr;    }    protected function postUpdate($arr)    {        $result = parent::postUpdate($arr);        return $result;    }    public function selectDetail($uid)    {        $data = parent::selectDetail($uid);        $bd_code = $this->get('bd_code');        // 접근 경로와 code가 맞지 않으면 비정상 접근 처리 220718 박금삼        /*if($bd_code && $data['bd_code'] && $bd_code != $data['bd_code']){            Html::alert('비정상적인 접근입니다.');        }*/        if ($this->checkHit($uid)) {            $data['bd_hit'] += 1;        }        $data['cp_name'] = $data['bd_etc5'];        return $data;    }    protected function updateState($db_table, $uid)    {        Db::update($db_table, " bd_state = 'E' ", " where bd_id = '$uid' ");// 종료일자 기준 상태정보 변경    }    protected function convertDetail($data)    {        // 작성일        if ($this->get('flag_use_reg')) {            $data['reg_time'] = $data['bd_reg_date'] . ' ' . $data['bd_reg_time'];        }        //print_r($data);        //echo '<br />'._NOW_DATE_;        //exit;        if ($data['bd_code'] == 'business' || $data['bd_code'] == 'bidding' || $data['bd_code'] == 'recruit') {            if ($data['bd_end_date'] < _NOW_DATE_ && $data['bd_state'] != 'E') {                $this->updateState($this->get('data_table'), $data['bd_id']);            }        }        $data = parent::convertDetail($data);        // 답변일시        if ($data['bd_answer_time'] && $data['bd_answer_time'] != '0000-00-00 00:00:00') {            $data['bt_bd_answer_date'] = str_replace('-', '.', $data['bd_answer_time']);            $data['bt_bd_answer_datetime'] = Format::beautifyDateTime($data['bd_answer_time']);        }        // 시작일        if ($this->get('flag_use_bgn')) {            $data['bt_bd_bgn_date'] = str_replace('-', '.', $data['bd_bgn_date']);            $data['bt_bd_bgn_datetime'] = Format::beautifyDateTime($data['bd_bgn_date'] . ' ' . $data['bd_bgn_time']);        }        // 종료일        if ($this->get('flag_use_end')) {            $data['bt_bd_end_date'] = str_replace('-', '.', $data['bd_end_date']);            $data['bt_bd_end_datetime'] = Format::beautifyDateTime($data['bd_end_date'] . ' ' . $data['bd_end_time']);        }        // 최신글        if (Time::calculateIntervals($data['reg_date'], _NOW_DATE_, 'd') <= $this->get('new_days')) {            $data['is_new'] = true;        }        global $layout;        $data['bd_content'] = str_replace('/webuser/', '/web' . $layout . '/', $data['bd_content']);        return $data;    }    protected function makeDbWhere()    {        $db_where = parent::makeDbWhere();        $bd_code = $this->get('bd_code');        if ($bd_code) {            $db_where .= " AND bd_code = '$bd_code' ";        }        $this->set('db_where', $db_where);        return $db_where;    }    public function selectAroundData($uid, $mode)    {        $data_table = $this->get('data_table');        $pk = $this->get('pk');        $this->initSelect();        $select_table = $this->get('select_table');        $select_columns = $this->get('select_columns');        // where        $db_where = $this->makeDbWhere();        // having        $db_having = $this->makeDbHaving();        // order        $db_order = $this->makeDbOrder();        // around        $order_column = $this->get('order_column');        //echo $data_table . ' ' . $order_column . ' as order_value WHERE ' . $pk . '=' . $uid;        $data = Db::selectOnce($data_table, "$order_column as order_value", "WHERE $pk = '$uid'", "");        $order_value = $data['order_value'];        $db_where .= " AND $pk != '$uid' AND $order_column ";        if ($mode == 'prev') {            $db_where .= ' > ';            $db_order = str_replace('DESC', 'ASC', $db_order);        } elseif ($mode == 'next') {            $db_where .= ' < ';        }        $db_where .= " '$order_value' ";        $data = Db::selectOnce($select_table, $select_columns, $db_where, $db_having . ' ' . $db_order);        return $data;    }    public function selectNoticeList()    {        $this->initSelect();        $select_table = $this->get('select_table');        $select_columns = $this->get('select_columns');        // where        $bd_code = $this->get('bd_code');        $db_where = "WHERE bd_code = '$bd_code' AND bd_is_notice = 'Y' ";        // having        $db_having = $this->makeDbHaving();        // order        $db_order = $this->makeDbOrder();        // around        $list = Db::select($select_table, $select_columns, $db_where, $db_having . ' ' . $db_order, '');        return $this->convertList($list);    }    public function selectLatestList($cnt_rows = 5)    {        $this->initSelect();        $select_table = $this->get('select_table');        $select_columns = $this->get('select_columns');        // where        $bd_code = $this->get('bd_code');        // 기업교육문의 게시판 처리여부(처리) 시 숨김        if ($bd_code == 'admin_notice') {            $db_where = "WHERE bd_code IN ('owner','news') AND bd_etc7 != 'Y'";        } elseif ($bd_code == 'notice') {            $db_where = "WHERE bd_code = '$bd_code' AND bd_is_display = 'Y' AND (bd_etc10 IS NULL || bd_etc10 != 'Y')";        } elseif ($bd_code == 'faq') {            $db_where = "WHERE bd_code = '$bd_code' AND bd_answer_time IS NULL";            $db_where .= " AND bd_category != 'live'";        } elseif ($bd_code == 'gallery') {            // 작품과힐링 갤러리 게시판 최신글 추출            $db_where = "WHERE bd_code = '$bd_code'";        } else {            $db_where = "WHERE bd_code = '$bd_code' AND bd_answer_time IS NULL AND bd_state = 'W'";        }        //Log::debug($db_where);        // having        $db_having = $this->makeDbHaving();        // order        $db_order = 'ORDER BY reg_time DESC';        // around        $list = Db::select($select_table, $select_columns, $db_where, $db_having . ' ' . $db_order, "LIMIT $cnt_rows");        return $this->convertList($list);    }    protected function checkHit($uid)    {        $bd_code = $this->get('bd_code');        $pk = $this->get('pk');        $ck_name = 'ck_' . $bd_code . '_' . $uid;        $result = false;        if (!Session::getCookie($ck_name)) {            $data_table = $this->get('data_table');            Db::update($data_table, "bd_hit = bd_hit + 1", "WHERE $pk = '$uid'");            Session::setCookie($ck_name, 1);            $result = true;        }        return $result;    }    public function countTotal()    {        $cnt_total = parent::countTotal();        return $cnt_total;    }    public function checkReplyAuth($uid)    {        global $is_admin;        if ($is_admin) {            return true;        }        return false;    }    public function sendAuthNo()    {        return Auth::sendAuthNo(array(            'au_type' => 'S',            'au_target' => $this->getRequestParameter('bd_writer_tel'),            'au_name' => $this->getRequestParameter('bd_writer_name')        ));    }    public function validateAuthNo()    {        $bd_writer_tel = $this->getRequestParameter('bd_writer_tel');        $bd_writer_name = $this->getRequestParameter('bd_writer_name');        $au_no = $this->getRequestParameter('au_no');        $result = Auth::validateAuthNo(array(            'au_type' => 'S',            'au_target' => $bd_writer_tel,            'au_no' => $au_no        ));        if ($result['code'] == 'success') {            Session::setSession('ss_bd_writer_tel', $bd_writer_tel);            Session::setSession('ss_bd_writer_name', $bd_writer_name);        }        return $result;    }    public function updateReply()    {        $uid = $this->get('uid');        // 권한 체크        if (!$uid || !$this->checkReplyAuth($uid)) {            $result = array(                'code' => 'failure',                'msg' => '권한이 없습니다.'            );            return $result;        }        $arr = $this->getParameters('bd_answer_name,bd_answer_content', 'post');        global $member, $layout;        $arr['bd_state'] = 'E';        $arr['bd_answer_id'] = $member['mb_id'];        $arr['bd_answer_ip'] = _USER_IP_;        $arr['bd_answer_time'] = _NOW_DATETIME_;        $arr['bd_answer_mode'] = $layout;        $data_table = $this->get('data_table');        $pk = $this->get('pk');        $bd_date = Db::selectOnce('tbl_board', '*', "WHERE $pk = '$uid'", '');        unset($arr[$pk]);        if (Db::updateByArray($data_table, $arr, "WHERE $pk = '$uid'")) {            // 메시지 전송            $data = Db::selectOnce($data_table, "*", "WHERE $pk = '$uid'", '');            if ($_POST['reply_mode'] == 'qna' && !$bd_date['bd_answer_time']) {                $mb_id = $data['reg_id'];                $mb_data = Db::selectOnce('tbl_user', '*', "WHERE mb_id = '$mb_id'", '');                //Log::debug($mb_data);                $mb_tel = $mb_data['mb_tel'];                $host = "www.munjasin.co.kr";                $id = "bestonealpha"; //         문자의신 아이디  입력                $pass = "bestone6508";     //         문자의신 비밀번호 입력                $msg = "[알파에듀] 회원님이 등록하신 게시글에 답변이 등록되었습니다.";                $param = "remote_id=" . $id;                $param .= "&remote_pass=" . $pass;                $param .= "&remote_phone=" . $mb_tel;                $param .= "&remote_callback=0552556364";                $param .= "&remote_msg=" . $msg;                // 문자 크기 검사 minju 221125                $msg_len = mb_strlen($msg,"utf-8") + (strlen($msg) - mb_strlen($msg,"utf-8")) / 2;                if($msg_len > 90){                    $path = "/Remote/RemoteMms.html";                } else {                    $path = "/Remote/RemoteSms.html";                }                $fp = @fsockopen($host, 80, $errno, $errstr, 30);                $return = "";                if (!$fp) {                    echo $errstr . "(" . $errno . ")";                } else {                    fputs($fp, "POST " . $path . " HTTP/1.1\r\n");                    fputs($fp, "Host: " . $host . "\r\n");                    fputs($fp, "Content-type: application/x-www-form-urlencoded\r\n");                    fputs($fp, "Content-length: " . strlen($param) . "\r\n");                    fputs($fp, "Connection: close\r\n\r\n");                    fputs($fp, $param . "\r\n\r\n");                    while (!feof($fp)) $return .= fgets($fp, 4096);                }                fclose($fp);                $_temp_array = explode("\r\n\r\n", $return);                $_temp_array2 = explode("\r\n", $_temp_array[1]);                if (sizeof($_temp_array2) > 1) {                    $return_string = $_temp_array2[1];                } else {                    $return_string = $_temp_array2[0];                }                $result['data'] = $return_string;            }            $this->set('return_uri', './view.html');            $this->set('success_msg', '정상적으로 답변을 작성하였습니다.');            $result = $this->postUpdate($arr);        } else {            $result = array(                'code' => 'failure',                'msg' => '답변 과정에서 장애가 발생하였습니다.'            );        }        return $result;    }    public function deleteReply()    {        $uid = $this->get('uid');        // 권한 체크        if (!$uid || !$this->checkReplyAuth($uid)) {            $result = array(                'code' => 'failure',                'msg' => '권한이 없습니다.'            );            return $result;        }        $arr['bd_state'] = 'W';        $arr['bd_answer_name'] = null;        $arr['bd_answer_content'] = null;        $arr['bd_answer_id'] = null;        $arr['bd_answer_ip'] = null;        $arr['bd_answer_time'] = null;        $data_table = $this->get('data_table');        $pk = $this->get('pk');        unset($arr[$pk]);        if (Db::updateByArray($data_table, $arr, "WHERE $pk = '$uid'")) {            $this->set('return_uri', './view.html');            $this->set('success_msg', '정상적으로 답변을 삭제하였습니다.');            $result = $this->postUpdate($arr);        } else {            $result = array(                'code' => 'failure',                'msg' => '답변 삭제제 과정에서 장애가 발생하였습다.'            );        }        return $result;    }    protected function makeSmsMessage($data, $mode)    {        $msg = '';        if (defined('_HOMEPAGE_TITLE_')) {            $msg .= '[' . _HOMEPAGE_TITLE_ . '] ';        }        if ($mode == 'reply') {            $msg .= '작성하신 게시물에 답변이 등록되었습니다.';        }        return $msg;    }    public function emailList($recipient = null, $partner = null)    {        $db_where = "WHERE staff_email_unsubscribe IS NULL AND staff_email IS NOT NULL";        if ($partner) {            // 파트너선택값으로 작동            if ($partner == 'head_office') {                $db_where .= " AND (partner_id = '' OR partner_id = 'adpartner')";            } else {                $db_where .= " AND partner_name = '" . $partner . "'";            }        } else {            // 체크박스값으로 작동            if ($recipient) {                $comma = strpos($recipient, ',');                if ($comma === false) {                    $equal = '= ' . $recipient;                } else {                    $equal = 'IN (' . $recipient . ')';                }                $db_where .= " AND cp_id " . $equal;            }        }        //echo $db_where;        //Log::debug($recipient);        //Log::debug($partner);        //Log::debug($db_where);        $list = Db::select("tbl_company", "DISTINCT staff_email", $db_where, '', '');        for ($i = 0; $i < count($list); $i++) {            $list[$i] = $list[$i]['staff_email'];        }        return $list;    }    public function sendCompanyMail()    {        define('_ALPHA_', true);        define('_ROOT_PATH_', $_SERVER['DOCUMENT_ROOT']);        require_once _ROOT_PATH_ . '/common.php';        require _PLUGIN_PATH_ . '/PHPMailer-master/src/Exception.php';        require _PLUGIN_PATH_ . '/PHPMailer-master/src/PHPMailer.php';        require _PLUGIN_PATH_ . '/PHPMailer-master/src/SMTP.php';        //print_r($_FILES);        //exit;        $email_list = $_POST['email_list'];        $email_list = explode(',', $email_list);        $email_list_count = count($email_list);        $result = array(            'code' => 'success',            'msg' => $email_list_count . '개 기업 홍보메일 발송완료',            'uri' => '/webadmin/company/list.html'        );        $bd_object = $_POST['bd_subject'];        $failed_emails = [];        $success_emails = [];        // 메일 설정 변수 yllee 240801        $set_mail['char_set'] = 'utf-8';        $set_mail['encoding'] = 'base64';        $set_mail['host'] = 'smtps.hiworks.com';        $set_mail['port'] = '465';        $set_mail['smtp_secure'] = 'ssl';        $set_mail['user_name'] = 'lucas@alpha-edu.co.kr';        $set_mail['password'] = 'EE7DEbpTXs9ZAGv3arLM';        $set_mail['set_from_mail'] = 'alpha@alpha-edu.co.kr';        $set_mail['set_from_name'] = '알파에듀';        // 기업담당자        try {            // 단체메일 발송            for ($i = 0; $i < count($email_list); $i++) {                $crypt_email_list[$i] = Format::encrypt($email_list[$i]);                $msg = $_POST['bd_content'];                if ($_POST['bg_scales'] == 'on') {                $emailBody = '                <div style="background-image: url(\'https://alpha-edu.co.kr/data/image/kor-mail-cover-img.jpg\'); background-size: 100% 100%; width: 750px; padding: 70px 50px 300px 50px; margin: 0 auto;">                    ' . $msg . '                </div>                ';} else {                    $emailBody = $msg;                }                $mail = new PHPMailer(true); // the true param means it will throw exceptions on errors, which we need to catch $mail->IsSMTP(); // telling the class to use SMTP                $mail->IsSMTP(); // telling the class to use SMTP                // 메일 설정 변수 처리 yllee 240801                $mail->CharSet = $set_mail['char_set'];                $mail->Encoding = $set_mail['encoding'];                $mail->Host = $set_mail['host'];                $mail->SMTPAuth = true;                $mail->Port = $set_mail['port'];                $mail->SMTPSecure = $set_mail['smtp_secure'];                $mail->Username = $set_mail['user_name'];                $mail->Password = $set_mail['password'];                $mail->SetFrom($set_mail['set_from_mail'], $set_mail['set_from_name']);                $mail->AddAddress($email_list[$i]); // 받을 사람 email 주소와 표시될 이름 (표시될 이름은 생략가능)                $mail->Subject = $bd_object; // 메일 제목                //Log::debug($_FILES);                //Log::debug('$_FILES');                if (isset($_FILES['atch_file']) && is_array($_FILES['atch_file']['tmp_name'])) {                    // 파일 배열을 순회하며 유효한 파일만 첨부                    for ($j = 0; $j < count($_FILES['atch_file']['tmp_name']); $j++) {                        // 파일이 실제로 업로드되었는지 확인 (tmp_name이 비어있지 않은지 확인)                        if (!empty($_FILES['atch_file']['tmp_name'][$j])) {                            // 유효한 파일이 있을 경우에만 첨부                            $mail->AddAttachment(                                $_FILES['atch_file']['tmp_name'][$j],  // 임시 파일 경로                                $_FILES['atch_file']['name'][$j]       // 원래 파일명                            );                        }                    }                }                //$mail->AddEmbeddedImage(_ROOT_PATH_ . '/data/pdf/(주)알파에듀 학습매뉴얼_국민내일배움카드.pdf', 'data');                if ($_POST['scales'] == 'on') {                    $emailBody .= '                <br><br><br><br><br><br><br><br><br><br>                <hr/><br>                <div style="text-align: center">                    <span><a style="font-weight:bold;">주식회사 알파에듀</a>의 메일을 더 이상 받고 싶지 않으시면 <a href="https://alpha-edu.co.kr/work4/email_unsubscribe.php?email='. $crypt_email_list[$i] .'">수신거부</a>를 눌러주세요.</span>                </div>';                }                $mail->Body = $emailBody; // 내용                //Log::debug($msg);                $mail->IsHTML(true);                try {                    $mail->Send();// 메일 발송                    $success_emails[] = $email_list[$i];                } catch (Exception $e) {                    $failed_emails[] = $email_list[$i]; // 실패한 메일 주소 저장                }            }        } catch (Exception $e) {            $result = array(                'code' => 'failure',                'msg' => $mail->ErrorInfo . '...'            );        }        // 발송 내역 기록용 geosan 240924        $mail = new PHPMailer(true);        $mail->IsSMTP();        $mail->CharSet = $set_mail['char_set'];        $mail->Encoding = $set_mail['encoding'];        $mail->Host = $set_mail['host'];        $mail->SMTPAuth = true;        $mail->Port = $set_mail['port'];        $mail->SMTPSecure = $set_mail['smtp_secure'];        $mail->Username = $set_mail['user_name'];        $mail->Password = $set_mail['password'];        $mail->SetFrom($set_mail['set_from_mail'], $set_mail['set_from_name']);        $mail->AddAddress('alpha@alpha-edu.co.kr');        $mail->Subject = date('Y-m-d') . '일자 홍보메일 발송완료 내역';        $msg ='<strong>홍보메일 발송성공: </strong>' . count($success_emails) . '건<br/>';        $msg .= '<br/>발송목록 : <br/>' . implode(',', $success_emails);        // 실패한 메일 주소가 있을 경우        if (count($failed_emails) > 0) {            $msg .= '<br/><br/><br/><strong>발송실패 : </strong>' . count($failed_emails) . '건<br/>';            $msg .= '<br/>발송실패목록 : <br/>' . implode(',', $failed_emails);        } else {            $msg .= '<br/><br/>모든 메일이 성공적으로 발송되었습니다.';        }        $msg .= '<br/><br/><br/><hr/><br/><br/><br/>' . $bd_object . '<br/><br/><br/>';        if ($_POST['bg_scales'] == 'on') {        $msg .= '                <div style="background-image: url(\'https://alpha-edu.co.kr/data/image/kor-mail-cover-img.jpg\'); background-size: 100% 100%; width: 750px; padding: 70px 50px 300px 50px;">                    ' . $_POST['bd_content'] . '                </div>                    ';} else {        $msg .= $_POST['bd_content'];        }        $mail->Body = $msg;        $mail->IsHTML(true);        $mail->Send(); // 본인에게 발송 완료 메일 전송        /*$partner_id = $cp_data['partner_id'];        $partner_data = Db::selectOnce('tbl_user', 'mb_email', "WHERE mb_id ='$partner_id'", '');        // 파트너        if ($partner_data['mb_email']) {            try {                $mail = new PHPMailer(true);                $mail->IsSMTP(); // telling the class to use SMTP                $mail->CharSet = $set_mail['char_set'];                $mail->Encoding = $set_mail['encoding'];                $mail->Host = $set_mail['host'];                $mail->SMTPAuth = true;                $mail->Port = $set_mail['port'];                $mail->SMTPSecure = $set_mail['smtp_secure'];                $mail->Username = $set_mail['user_name'];                $mail->Password = $set_mail['password'];                $mail->SetFrom($set_mail['set_from_mail'], $set_mail['set_from_name']);                $mail->AddAddress($partner_data['mb_email']); // 받을 사람 email 주소와 표시될 이름 (표시될 이름은 생략가능)                $mail->Subject = '[알파에듀] ' . $cp_data['cp_name'] . ' 교육 안내'; // 메일 제목                $mail->AddEmbeddedImage(_ROOT_PATH_ . '/common/img/mail_footer.png', 'logo_2u');                $mail->Body = $msg; // 내용                $mail->IsHTML(true);                $mail->Send(); // 발송            } catch (Exception $e) {                $result = array(                    'code' => 'failure',                    'msg' => $mail->ErrorInfo . '...'                );            }        }*/        return $result;    }}