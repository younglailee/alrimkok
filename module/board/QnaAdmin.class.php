<?php/** * 사용자모드 > 공지사항 모듈 클래스 * @file    NoticeUser.class.php * @author  Alpha-Edu * @package board */namespace sFramework;class QnaAdmin extends Qna{    public function checkViewAuth($data)    {        return true;    }    public function checkWriteAuth()    {        return true;    }    public function checkUpdateAuth($uid)    {        return true;    }    public function checkReplyAuth($uid)    {        return true;    }    public function checkDownloadSession()    {        $ss_bd_writer_name = Session::getSession('ss_bd_writer_name');        $ss_bd_writer_tel = Session::getSession('ss_bd_writer_tel');        if ($ss_bd_writer_name && $ss_bd_writer_tel) {            return true;        } else {            return false;        }    }    public function insetDownload($data)    {        //Log::debug($data);        $data_table = 'tbl_download';        $arr = array(            'dw_name' => $data['us_name'],            'dw_tel' => $data['us_tel'],            'fi_id' => $data['fi_id'],            'fi_name' => $data['fi_name'],            'bd_category' => $data['bd_category']        );        global $member;        $arr['reg_id'] = $member['mb_id'];        $arr['reg_time'] = _NOW_DATETIME_;        if (Db::insertByArray($data_table, $arr)) {            $result = $this->postInsert($arr);        } else {            $result = array(                'code'  => 'failure',                'msg'   => '등록 과정에서 장애가 발생하였습니다.'            );        }        return $result;    }    public function selectList()    {        // count        $cnt_total = $this->countTotal();        $this->set('cnt_total', $cnt_total);        $select_table = $this->get('select_table');        $select_columns = $this->get('select_columns');        $db_where = $this->get('db_where');        $db_having = $this->get('db_having');        $page = $this->get('page');        $cnt_rows = $this->get('cnt_rows');        $list_mode = $this->get('list_mode');        $db_limit = 'LIMIT ' . ($page - 1) * $cnt_rows . ', ' . $cnt_rows;        if($list_mode == 'excel'){            $db_limit = '';        }        $db_order = $this->makeDbOrder();        $list = Db::select($select_table, $select_columns, $db_where, $db_having . ' ' . $db_order, $db_limit);        return $this->convertList($list);    }    public function selectDetail($uid)    {        $data = parent::selectDetail($uid);        return $data;    }}